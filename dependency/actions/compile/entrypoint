#!/usr/bin/env bash

set -eu
set -o pipefail

function main() {
  local version output_dir target httpd_dir dest_dir
  version=""
  output_dir=""
  target=""

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --version)
        version="${2}"
        shift 2
        ;;

      --outputDir)
        output_dir="${2}"
        shift 2
        ;;

      --target)
        target="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  if [[ "${version}" == "" ]]; then
    echo "--version is required"
    exit 1
  fi

  if [[ "${output_dir}" == "" ]]; then
    echo "--outputDir is required"
    exit 1
  fi

  if [[ "${target}" == "" ]]; then
    echo "--target is required"
    exit 1
  fi

  apr_dir="$(mktemp -d)"
  apr_iconv_dir="$(mktemp -d)"
  apr_util_dir="$(mktemp -d)"
  httpd_dir="$(mktemp -d)"

  dest_dir="$(mktemp -d)"
  
  pushd "${apr_dir}"
    echo "Installing APR"

    curl "https://apache.osuosl.org/apr/apr-1.7.0.tar.gz" \
      --silent \
      --output "apr-1.7.0.tar.gz"

    tar --extract \
      --file "apr-1.7.0.tar.gz"

    echo "Running APR's configure script"

    apr_dir="${apr_dir}/apr-1.7.0"
    pushd "apr-1.7.0"
      ./configure
    popd
  popd

  pushd "${apr_iconv_dir}"
    echo "Installing APR Iconv"

    curl "https://apache.osuosl.org/apr/apr-iconv-1.2.2.tar.gz" \
      --silent \
      --output "apr-iconv-1.2.2.tar.gz"

    tar --extract \
      --file "apr-iconv-1.2.2.tar.gz"

    echo "Running APR Iconv's configure script"

    apr_iconv_dir="${apr_iconv_dir}/apr-iconv-1.2.2"
    pushd "apr-iconv-1.2.2"
      ./configure --with-apr="${apr_dir}/apr-1-config"
    popd
  popd

  pushd "${apr_util_dir}"
    echo "Installing APR Util"
    curl "https://apache.osuosl.org/apr/apr-util-1.6.1.tar.gz" \
      --silent \
      --output "apr-util-1.6.1.tar.gz"
    
    tar --extract \
      --file "apr-util-1.6.1.tar.gz"

    echo "Running APR Util's configure script"

    apr_util_dir="${apr_util_dir}/apr-util-1.6.1"
    pushd "apr-util-1.6.1"
      ./configure \
        --with-apr="${apr_dir}" \
        --with-iconv="${apr_iconv_dir}" \
        --with-crypto \
        --with-openssl \
        --with-mysql \
        --with-pgsql \
        --with-gdbm \
        --with-ldap
    popd
  popd

  pushd "${httpd_dir}"

    echo "Downloading upstream tarball"

    curl "http://archive.apache.org/dist/httpd/httpd-${version}.tar.bz2" \
      --silent \
      --output "httpd-${version}.tar"

    tar --extract \
      --file "httpd-${version}.tar"

    pushd "httpd-${version}"
      echo "Running HTTPD's ./configure script"

      ./configure \
        --prefix=/app/httpd \
        --with-apr="${apr_dir}" \
        --with-apr-util="${apr_util_dir}" \
        --with-ssl=/usr/lib/x86_64-linux-gnu \
        --enable-mpms-shared='worker event' \
        --enable-mods-shared='reallyall' \
        --disable-isapi \
        --disable-dav \
        --disable-dialup

      echo "Running make and make install"

      make
      DESTDIR="${dest_dir}/httpd" make install
    popd
  popd

  pushd "${dest_dir}"
    tar zcvf "${output_dir}/temp.tgz" .
  popd

  pushd "${output_dir}"

    SHA256=$(sha256sum temp.tgz)
    SHA256="${SHA256:0:64}"

    OUTPUT_TARBALL_NAME="httpd-${version}-${target}.tgz"
    OUTPUT_SHAFILE_NAME="httpd-${version}-${target}.tgz.sha256"

    echo "Building tarball ${OUTPUT_TARBALL_NAME}"

    mv temp.tgz "${OUTPUT_TARBALL_NAME}"

    echo "Creating sha256 file for ${OUTPUT_TARBALL_NAME}"
    echo "${SHA256}" > "${OUTPUT_SHAFILE_NAME}"
  popd
}

main "${@:-}"
